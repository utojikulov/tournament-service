services:
  postgres:
    image: postgres:latest
    container_name: postgres_tournament

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

    volumes:
      - ./data:/data/postgres_data

    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

    networks:
        - tournament-service


  redis:
    image: redis:latest
    container_name: redis_tournament
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./redisdata:/data/redis_data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M 
        reservations:
          cpus: '0.25'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - tournament-service

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_tounrament

    ports:
      - ${PORT}:${PORT}
    env_file:
      - ./.env

    depends_on:
      redis:
        condition: service_healthy

    networks:
      - tournament-service

volumes:
  data:

networks:
  tournament-service:
    driver: bridge
