generator client {
  provider = "prisma-client-js"
  output   = "./generated"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    username String @unique
    duels Int @default(0)
    wins Int @default(0)
    losses Int @default(0)

    duelsRed Duel[] @relation("redPlayer")
    duelsBlue Duel[] @relation("bluePlayer")

    @@map("users")
}

model Tournament {
    id String @id @default(uuid())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name String @unique

    duels Duel[]

    @@map("tournament")
}

model Duel {
    id String @id @default(uuid())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    tournament Tournament @relation(fields: [tournamentId], references: [id])
    tournamentId String @map("tournament_id")

    round Int

    redPlayer User? @relation("redPlayer", fields: [redPlayerId], references: [id])
    redPlayerId String @map("red_player_id")

    bluePlayer User? @relation("bluePlayer", fields: [bluePlayerId], references: [id])
    bluePlayerId String? @map("blue_player_id")

    winnerId String
    loserId String?


    @@map("duel")
}
